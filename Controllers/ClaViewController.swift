//
//  ClaViewController.swift
//  PruebaBP
//
//  Created by Boris Parrales on 11/4/17.
//  Copyright © 2017 Boris Parrales. All rights reserved.
//

import UIKit

class ClaViewController: UIViewController {
    
    @IBOutlet weak var labelCla: UILabel!
    @IBOutlet weak var textDesc: UITextView!
    @IBOutlet weak var btnSrc: UIButton!
 

    override func viewDidLoad() {
        super.viewDidLoad()

    }
    override func viewWillAppear(_ animated: Bool) {
        if InformationTableViewController.leng == "Español"{
            self.labelCla.text = "Clase"
            self.textDesc.text = "En informática, una clase es una plantilla para la creación de objetos de datos según un modelo predefinido. Las clases se utilizan para representar entidades o conceptos, como los sustantivos en el lenguaje. Cada clase es un modelo que define un conjunto de variables -el estado, y métodos apropiados para operar con dichos datos -el comportamiento. Cada objeto creado a partir de la clase se denomina instancia de la clase. \n\nLas clases son un pilar fundamental de la programación orientada a objetos. Permiten abstraer los datos y sus operaciones asociadas al modo de una caja negra. Los lenguajes de programación que soportan clases difieren sutilmente en su soporte para diversas características relacionadas con clases. La mayoría soportan diversas formas de herencia. Muchos lenguajes también soportan características para proporcionar encapsulación, como especificadores de acceso. \n\nUna clase también puede tener una representación (metaobjeto) en tiempo de ejecución, que proporciona apoyo en tiempo de ejecución para la manipulación de los metadatos relacionados con la clase."
            self.btnSrc.setTitle("Fuente Wikipedia", for: InformationTableViewController.normal)
        }else if InformationTableViewController.leng == "Ingles"{
            self.labelCla.text = "Class"
            self.textDesc.text = "In object-oriented programming, a class is an extensible program-code-template for creating objects, providing initial values for state (member variables) and implementations of behavior (member functions or methods). In many languages, the class name is used as the name for the class (the template itself), the name for the default constructor of the class (a subroutine that creates objects), and as the type of objects generated by instantiating the class; these distinct concepts are easily conflated. \n\nWhen an object is created by a constructor of the class, the resulting object is called an instance of the class, and the member variables specific to the object are called instance variables, to contrast with the class variables shared across the class. \n\nIn some languages, classes are only a compile-time feature (new classes cannot be declared at runtime), while in other languages classes are first-class citizens, and are generally themselves objects (typically of type Class or similar). In these languages, a class that creates classes is called a metaclass."
            self.btnSrc.setTitle("Source Wikipedia", for: InformationTableViewController.normal)
        }
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        
    }
    

    @IBAction func Src(_ sender: Any) {
        if InformationTableViewController.leng == "Español"{
            let url : URL = URL(string: "https://es.wikipedia.org/wiki/Clase_(inform%C3%A1tica)")!
            UIApplication.shared.open(url, options: [:], completionHandler: nil)
        }else if InformationTableViewController.leng == "Ingles"{
            let url : URL = URL(string: "https://en.wikipedia.org/wiki/Class_(computer_programming)")!
            UIApplication.shared.open(url, options: [:], completionHandler: nil)
        }

    }
}
